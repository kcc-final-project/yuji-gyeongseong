<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.yujigyeongseong.api.domain.member.dao.MemberMapper">
    <select id="countByUsername" parameterType="String" resultType="int">
        SELECT
            COUNT(*)
        FROM
            member
        WHERE
            username = #{id}
    </select>

    <select id="selectAll" resultType="Institution">
        SELECT
            *
        FROM
            institution
    </select>

    <select id="selectOrgan" resultType="Institution" parameterType="SelectInstitutionRequest">
        SELECT
        *
        FROM
        institution
        WHERE
        1=1
        <if test="name != null and name != ''">
            AND name LIKE '%' || #{name} || '%'
        </if>
        <if test="businessRegisterNo != null and businessRegisterNo != ''">
            AND business_register_no LIKE '%' || #{businessRegisterNo} || '%'
        </if>
        <if test="companyType != null and companyType != ''">
            AND company_type = #{companyType}
        </if>
    </select>

    <insert id="insertMember" parameterType="SignUpMember">
        INSERT INTO member (
            mem_no, username, password, name, email, birth, gender, tel, addr, affil_type,
            affil_dept, position, status, created_at, institution_no
        ) VALUES (
                     seq_member.NEXTVAL, #{username}, #{password}, #{name}, #{email},
                     TO_DATE(#{birth}, 'YYYY-MM-DD'), #{gender}, #{tel}, #{addr},
                     #{affilType}, #{affilDept}, #{position}, '활성', CURRENT_TIMESTAMP, #{institutionNo}
                 )
    </insert>


    <resultMap id="MemberLoginResultMap" type="MemberLogin">
        <id property="memNo" column="memNo"/>
        <result property="rsrchNo" column="rsrchNo"/>
        <result property="name" column="name"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <result property="email" column="email"/>
        <result property="birth" column="birth"/>
        <result property="gender" column="gender"/>
        <result property="tel" column="tel"/>
        <result property="addr" column="addr"/>
        <result property="affilType" column="affil_type"/>
        <result property="affilDept" column="affil_dept"/>
        <result property="position" column="position"/>
        <result property="institutionName" column="institution_name"/>
        <collection property="roles" ofType="MemRole">
            <id property="roleNo" column="roleNo"/>
            <result property="roleName" column="roleName"/>
        </collection>
    </resultMap>

    <select id="findByUsername" parameterType="String" resultMap="MemberLoginResultMap">
        SELECT m.mem_no as "memNo", m.rsrch_no as "rsrchNo", m.name, m.username, m.password,m.email,TO_CHAR(m.birth, 'yyyy-MM-dd') AS birth,m.gender,m.tel,m.addr,m.affil_type,m.affil_dept,m.position,i.name as "institution_name",r.role_name as "roleName", r.role_no as "roleNo"
        FROM member m
                 LEFT JOIN mem_role mr ON m.mem_no = mr.mem_no
                 LEFT JOIN role r ON mr.role_no = r.role_no
                 LEFT JOIN institution i on m.institution_no = i.institution_no
        WHERE m.username = #{username}
    </select>

    <select id="findByMemNo" parameterType="String" resultType="int">
        SELECT mem_no
        FROM member
        WHERE username = #{username}
    </select>

    <insert id="insertRole" parameterType="int">
        INSERT INTO mem_role
        VALUES (#{memNo},1,CURRENT_TIMESTAMP)
    </insert>


    <update id="updateMember" parameterType="SignUpMember">
        UPDATE member
        <set>
            <if test="username != null">
                username = #{username},
            </if>
            <if test="name != null">
                name = #{name},
            </if>
            <if test="email != null">
                email = #{email},
            </if>
            <if test="birth != null">
                birth = TO_DATE(#{birth}, 'YYYY-MM-DD'),
            </if>
            <if test="gender != null">
                gender = #{gender},
            </if>
            <if test="tel != null">
                tel = #{tel},
            </if>
            <if test="addr != null">
                addr = #{addr},
            </if>
            <if test="affilType != null">
                affil_type = #{affilType},
            </if>
            <if test="affilDept != null">
                affil_dept = #{affilDept},
            </if>
            <if test="position != null">
                position = #{position},
            </if>
            <if test="institutionNo != null">
                institution_no = #{institutionNo},
            </if>
        </set>
        WHERE mem_no = #{memNo}
    </update>
    <delete id="deleteMemberById" parameterType="Long">
        DELETE FROM member
        where mem_no = #{memno}
    </delete>
</mapper>
